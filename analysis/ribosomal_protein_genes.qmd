---
title: "Ribosomal protein genes"
format: html
---

Load `Seurat`.

```{r load_seurat}
library("Seurat")
packageVersion("Seurat")
```

[Ribosomal protein genes](http://ribosome.med.miyazaki-u.ac.jp/rpg.cgi?mode=orglist&org=Homo%20sapiens).

```{r ribosomal_protein_genes}
small_subunit <- c("RPSA", "RPS2", "RPS3", "RPS3A", "RPS4X", "RPS4Y", "RPS5", "RPS6", "RPS7", "RPS8", "RPS9", "RPS10", "RPS11", "RPS12", "RPS13", "RPS14", "RPS15", "RPS15A", "RPS16", "RPS17", "RPS18", "RPS19", "RPS20", "RPS21", "RPS23", "RPS24", "RPS25", "RPS26", "RPS27", "RPS27A", "RPS28", "RPS29", "RPS30")

large_subunit <- c("RPL3", "RPL4", "RPL5", "RPL6", "RPL7", "RPL7A", "RPL8", "RPL9", "RPL10", "RPL10A", "RPL11", "RPL12", "RPL13", "RPL13A", "RPL14", "RPL15", "RPL17", "RPL18", "RPL18A", "RPL19", "RPL21", "RPL22", "RPL23", "RPL23A", "RPL24", "RPL26", "RPL27", "RPL27A", "RPL28", "RPL29", "RPL30", "RPL31", "RPL32", "RPL34", "RPL35", "RPL35A", "RPL36", "RPL36A", "RPL37", "RPL37A", "RPL38", "RPL39", "RPL40", "RPL41", "RPLP0", "RPLP1", "RPLP2", "RPLP3")

ribosomal_protein_genes <- c(small_subunit, large_subunit)
length(ribosomal_protein_genes) == length(grep(pattern = "^RP[SL]", x = ribosomal_protein_genes))
```

Compare with GTF ribosomal protein genes.

```{r}
gtf_ribo <- c("RPL22", "RPL11", "RPS6KA1", "RPS8", "RPL5", "RPS27", "RPS6KC1", "RPS7", "RPS27A", "RPL31", "RPL37A", "RPL32", "RPL15", "RPSA", "RPL14", "RPL29", "RPL24", "RPL22L1", "RPL39L", "RPL35A", "RPL9", "RPL34-AS1", "RPL34", "RPS3A", "RPL37", "RPS23", "RPS14", "RPL26L1", "RPS18", "RPS10-NUDT3", "RPS10", "RPL10A", "RPL7L1", "RPS12", "RPS6KA2", "RPS6KA2-IT1", "RPS6KA2-AS1", "RPS20", "RPL7", "RPL30", "RPL8", "RPS6", "RPL35", "RPL12", "RPL7A", "RPS24", "RPLP2", "RPL27A", "RPS13", "RPS6KA4", "RPS6KB2", "RPS6KB2-AS1", "RPS3", "RPS25", "RPS26", "RPL41", "RPL6", "RPLP0", "RPL21", "RPL10L", "RPS29", "RPL36AL", "RPS6KL1", "RPS6KA5", "RPS27L", "RPL4", "RPLP1", "RPS17", "RPL3L", "RPS2", "RPS15A", "RPL13", "RPL26", "RPL23A", "RPL23", "RPL19", "RPL27", "RPS6KB1", "RPL38", "RPL17", "RPS15", "RPL36", "RPS28", "RPL18A", "RPS16", "RPS19", "RPL18", "RPL13A", "RPS11", "RPS9", "RPL28", "RPS5", "RPS21", "RPL3", "RPS19BP1", "RPS6KA3", "RPS4X", "RPS6KA6", "RPL36A", "RPL39", "RPL10", "RPS4Y1", "RPS4Y2")

dplyr::setdiff(gtf_ribo, ribosomal_protein_genes)
```

Helper function to create a Seurat object.

```{r create_seurat_object}
create_seurat_object <- function(path, proj, min_cells = 3, min_features = 200){
  CreateSeuratObject(
    counts = Read10X(data.dir = path),
    min.cells = min_cells,
    min.features = min_features,
    project = proj
  )
}
```

Create Seurat objects

```{r seurat_objects}
pbmc  <- create_seurat_object(path = "../data/10x/pbmc4k/filtered_gene_bc_matrices/GRCh38/", proj = 'pbmc4k')
pan_t <- create_seurat_object(path = "../data/10x/t_3k/filtered_gene_bc_matrices/GRCh38/", proj = 'pan_t_3k')
h293t_3t3 <- create_seurat_object(path = "../data/10x/293t_3t3/filtered_matrices_mex/hg19/", proj = 'h293t_3t3')
gb <- create_seurat_object(path = "../data/10x/glioblastoma/filtered_feature_bc_matrix/", proj = 'glioblastoma')
```

Helper function to add ribosomal protein gene percentage. Use `PercentageFeatureSet` to calculate the percentage of a set of features, which saves us from some typing. The `[[` operator can add columns to object metadata, which is a great place to stash QC stats.

```{r add_ribo_prot_pc}
add_ribo_prot_pc <- function(obj){
  gs <- rownames(obj@assays$RNA$counts)
  feats <- gs[gs %in% ribosomal_protein_genes]
  stopifnot(length(feats)>0)
  obj[["percent.ribo"]] <- PercentageFeatureSet(obj, features = feats)
  obj
}
```

Add percent ribo.

```{r add_percent_ribo}
pbmc <- add_ribo_prot_pc(pbmc)
pan_t <- add_ribo_prot_pc(pan_t)
gb <- add_ribo_prot_pc(gb)
h293t_3t3 <- add_ribo_prot_pc(h293t_3t3)
```

Plot percent ribo.

```{r plot_percent_ribo}
library(ggplot2)
rbind(
  pbmc@meta.data,
  pan_t@meta.data,
  gb@meta.data
) |>
  ggplot(aes(orig.ident, percent.ribo)) +
  geom_boxplot() +
  theme_minimal() +
  labs(x = '', y = 'Percentage ribosomal protein genes', title = 'What percentage of 10x reads map to ribosomal protein genes?')
```

As a table.

```{r table_percent_ribo}
library(dplyr)
rbind(
  pbmc@meta.data,
  pan_t@meta.data,
  gb@meta.data
) |>
  group_by(orig.ident) |>
  summarise(
    mean = mean(percent.ribo),
    median = median(percent.ribo),
    pt25 = quantile(percent.ribo, probs = 0.25),
    pt75 = quantile(percent.ribo, probs = 0.75)
  )
```
